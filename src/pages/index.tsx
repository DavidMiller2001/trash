import { signIn, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

const SignInComponent = () => {
  return <button onClick={() => signIn()}>Sign In</button>;
};

type User = {
  name?: string | null | undefined;
  email?: string | null | undefined;
  image?: string | null | undefined;
} & {
  id: string;
};

const ProfileImage = (props: { size?: number; src: string }) => {
  const { size, src } = props;
  return (
    <Image
      src={`${src}`}
      width={size ?? 16}
      height={size ?? 16}
      alt="Profile Picture"
      className="rounded-full"
    />
  );
};

const CreatePostForm = (props: { user: User }) => {
  const { mutate } = api.post.create.useMutation();
  const { user } = props;
  const [postText, setPostText] = useState("");

  return (
    <form
      className="flex gap-4 border border-slate-200 p-8"
      onSubmit={(e) => {
        e.preventDefault();
        mutate({ content: postText });
      }}
    >
      <ProfileImage size={56} src={`${user.image}`} />

      <input
        type="text"
        placeholder="What is happening!?"
        className="bg-transparent text-xl outline-none"
        value={postText}
        onChange={(e) => setPostText(e.target.value)}
      />
      <button className="rounded-md bg-red-300 p-4 text-white" type="submit">
        Submit
      </button>
    </form>
  );
};

type Post = RouterOutputs["post"]["getAll"][number];

const PostView = (props: { post: Post }) => {
  const { post } = props;

  if (post?.author?.image === null) {
    return <div>error!</div>;
  }

  return (
    <li className="flex items-center gap-4 border border-slate-200 p-8">
      <img
        src={post?.author?.image}
        alt="Profile Picture"
        className="aspect-square w-14 rounded-full"
      />
      <h2 className="text-xl">{post.post.content}</h2>
    </li>
  );
};

export default function Home() {
  const { data, isLoading } = api.post.getAll.useQuery();
  const { data: sessionData } = useSession();

  console.log(data);

  sessionData?.user;

  if (isLoading) {
    return <div>Loading ...</div>;
  }

  if (!data) {
    return <div>Something went wrong :/</div>;
  }

  return (
    <>
      <Head>
        <title>Trash (Twitter Clone)</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto w-full max-w-screen-sm border-x border-black bg-gray-100">
        {!sessionData && <SignInComponent />}
        {!!sessionData && <CreatePostForm user={sessionData.user} />}
        <ul>
          {data.map((postWithAuthor) => {
            return (
              <PostView key={postWithAuthor.post.id} post={postWithAuthor} />
            );
          })}
        </ul>
      </main>
    </>
  );
}
